<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="admin">

  <select id="login" resultType="com.comnawa.mvcinema.insang.model.dto.AdminDTO">
    select id from admin where id=#{id} and passwd=#{passwd}
  </select>
  
  <select id="getTheaterList" resultType="com.comnawa.mvcinema.insang.model.dto.TheaterDTO">
    select idx, name, seat_max, price, preview, seat_now from theater order by name
  </select>
  
  <select id="getTheaterSitList" resultType="com.comnawa.mvcinema.insang.model.dto.TheaterSitDTO">
    select * from theater_sit order by name
  </select>
  
  <select id="getMaxIDX2" resultType="int">
    select nvl(max(idx),100) from theater where idx>100
  </select>
  
  <select id="getMaxIDX1" resultType="int">
    select nvl(max(idx),0) FROM theater WHERE 101>idx
  </select>

  <select id="getCountIDX" resultType="int">
    select nvl(count(idx),1) from theater
  </select>
  
  <insert id="addTheater1">
    insert into theater values(#{idx}, #{name}, #{max}, 0, #{price}, #{preview}, #{max})
  </insert>
  
  <insert id="addTheater2">
    insert into theater_sit values(#{idx}, #{rows}, #{cols}, #{name})
  </insert>
  
  <update id="updateTheater1">
    update theater set idx=#{idx}, name= #{name}, seat_max= #{max}, seat_out= 0, price= #{price}, preview= #{preview}
    where name= #{primaryName} 
  </update>
  
  <update id="updateTheater2">
    update theater_sit set idx= #{idx}, seat_row= #{rows}, seat_col= #{cols}, name= #{name}
    where name= #{primaryName}
  </update>
  
  <select id="genreList" resultType="com.comnawa.mvcinema.insang.model.dto.GenreDTO">
    select idx, genre from genre
  </select>
  
  <insert id="insertMovie">
    INSERT INTO movie (idx, title, age, director, actors, content, genre, release_date, runtime, img_url, preview)
    values (movie_idx_seq.nextval, #{title}, #{age}, #{director}, #{actors}, #{content}, #{genre}, #{release_date}, #{runtime}
    , #{img_url}, #{preview})
  </insert>
  
  <select id="movieList" resultType="com.comnawa.mvcinema.insang.model.dto.Insang_MovieDTO">
    select * from movie order by idx
  </select>
  
  <update id="updateMovie">
    update movie
    set title= #{title}, age= #{age}, director= #{director}, actors= #{actors},
      content= #{content}, genre= #{genre}, runtime= #{runtime}, img_url= #{img_url}, preview= #{preview} 
    where idx=#{idx}
  </update>
  
  <select id="theaterSitEmpty" resultType="com.comnawa.mvcinema.insang.model.dto.TheaterSitEmptyDTO">
    select * from theater_sit_empty order by idx
  </select>
  
  <insert id="updateSit">
    insert into theater_sit_empty values(#{idx},#{sit})
  </insert>
  
  <delete id="deleteSit">
    delete from theater_sit_empty where idx=#{idx}
  </delete>
  
  <select id="scheduleList" resultType="com.comnawa.mvcinema.insang.model.dto.ScreenInfoDTO">
    SELECT theater_idx, start_time, movie_idx, empty_sit, m.title title, m.IMG_URL img_url, m.runtime runtime, si.screen_idx screen_idx
    FROM screen_info si, movie m
    WHERE start_time > to_date(#{startdate},'yyyy-MM-dd') AND to_date(#{enddate},'yyyy-MM-dd') > start_time and theater_idx=#{idx}
      AND movie_idx= m.idx order by start_time
  </select>
  
  <insert id="insertSchedule">
    insert into screen_info values(#{theater_idx}, to_date(#{start_time},'yyyy-MM-dd HH24:MI:SS'),
     #{movie_idx}, #{empty_sit}, seq_screen_idx.nextval)
  </insert>
  
  <select id="detailSchedule" resultType="com.comnawa.mvcinema.insang.model.dto.ScreenInfoDTO">
    select * from screen_info where screen_idx= #{idx}
  </select>
  
  <update id="modSchedule">
    update screen_info set theater_idx= #{theater_idx}, start_time= to_date(#{start_time},'yyyy-MM-dd HH24:MI:SS'),
      movie_idx= #{movie_idx}
    where screen_idx= #{screen_idx}
  </update>
  
  <update id="maxSitUpdate">
    update theater set seat_now= seat_max- #{sitCount} where idx=#{idx}
  </update>
  
  <update id="emptySitUpdate">
    UPDATE screen_info SET empty_sit= (select seat_max from theater where idx=#{idx})-#{sitCount} 
    WHERE theater_idx=#{idx}
  </update>
  
</mapper>














