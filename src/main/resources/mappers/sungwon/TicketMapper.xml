<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<mapper namespace="ticket">
	<select id="movieList" resultType="TicketDTO">
		select idx
		movie_idx,title,age,release_date from movie order by release_date
	</select>
	<select id="screenTime" resultType="TicketDTO">
		select
		screen_idx,start_time,t.name t_name,empty_sit
		from screen_info s,
		theater t
		where s.theater_idx=t.idx and start_time >
		to_date(#{start_date},'yyyy-MM-dd')
		and
		to_date(#{end_date},'yyyy-MM-dd') > start_time and
		movie_idx=#{movie_idx}
		order by start_time
	</select>
	<select id="date_screenTime" resultType="TicketDTO">
		select
		screen_idx,m.title,m.age,start_time,t.name t_name,empty_sit
		from screen_info s, theater t, movie m
		where s.theater_idx=t.idx and movie_idx= m.idx and  
		start_time > to_date(#{start_date},'yyyy-MM-dd')
		and to_date(#{end_date},'yyyy-MM-dd') > start_time 
		order by start_time
	</select>
	<select id="selectMovie" resultType="TicketDTO">
		select title,age,img_url
		from movie where idx=#{movie_idx}
	</select>
	<select id="selectTime" resultType="TicketDTO">
		select start_time,t.name
		t_name
		from screen_info s, theater t
		where s.theater_idx=t.idx and
		screen_idx=#{screen_idx}
	</select>
	<select id="select_movieTime" resultType="TicketDTO">
		select
		start_time,t.name t_name,m.age age,m.title title,img_url,t.price
		from
		screen_info s, theater t, movie m
		where s.theater_idx=t.idx and
		s.movie_idx=m.idx and screen_idx=#{screen_idx}
	</select>
	<select id="soldout_seat" resultType="TicketDTO">
		select seat_out from
		soldout_seat where screen_idx=#{screen_idx}
	</select>
	<insert id="insertTicket">
		insert into
		ticket( ticket_idx, t_userid, t_title,
		t_age, t_theater, t_start_time, t_people, t_seat,
		t_price,
		t_serial_num,screen_idx )
		values(seq_ticket_idx.nextval, #{t_userid},
		#{t_title}, #{t_age},
		#{t_theater}, to_date(#{t_start_time},'yyyy-MM-dd
		hh24:mi'),
		#{t_people}, #{t_seat}, #{t_price},
		#{t_serial_num},#{screen_idx} )
	</insert>
	<update id="updatepeople">
		update movie set people= people+#{t_people} where
		title=#{t_title}
	</update>
	<update id="discountseat">
		update screen_info set empty_sit=
		empty_sit-#{t_people} where screen_idx=#{screen_idx}
	</update>
	<insert id="update_outseat">
		insert into soldout_seat(screen_idx, seat_out)
		values(#{screen_idx},#{seat_out})
	</insert>
	<select id="myTicketList" resultType="TicketDTO">
		select
		ticket_idx,screen_idx,m.img_url img_url, t_age,t_title, t_people, t_seat ,t_start_time, t_price, t_serial_num 
		from movie m ,ticket
		where m.title = t_title and t_userid=#{t_userid} order by t_start_time
	</select>
	<delete id="cancel_ticket">
		delete from ticket where ticket_idx=#{ticket_idx}
	</delete>
	<delete id="cancel_seat">
		delete from soldout_seat where screen_idx=#{screen_idx} and seat_out=#{seat_out}
	</delete>
	<update id="plus_seat">
		update screen_info set empty_sit=
		empty_sit+#{t_people} where screen_idx=#{screen_idx}
	</update>
	<update id="minus_people">
		update movie set people= people-#{t_people} where
		title=#{t_title}
	</update>
	<delete id="delete_ticket">
		delete from ticket where t_serial_num=#{t_serial_num}
	</delete>
	<select id="date_selectTime" resultType="TicketDTO">
		select s.screen_idx ,start_time,t.name t_name,m.img_url,m.TITLE,m.AGE
		from screen_info s, theater t, movie m
		where s.theater_idx=t.idx and m.idx = s.movie_idx and s.screen_idx=#{screen_idx}
	</select>
</mapper>














